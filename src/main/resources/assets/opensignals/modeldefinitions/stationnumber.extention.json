{
    "extention": {
        "Z1": "opensignals:blocks/zs3/z1",
        "Z2": "opensignals:blocks/zs3/z2",
        "Z3": "opensignals:blocks/zs3/z3",
        "Z4": "opensignals:blocks/zs3/z4",
        "Z5": "opensignals:blocks/zs3/z5",
        "Z6": "opensignals:blocks/zs3/z6",
        "Z7": "opensignals:blocks/zs3/z7",
        "Z8": "opensignals:blocks/zs3/z8",
        "Z9": "opensignals:blocks/zs3/z9",
        "Z10": "opensignals:blocks/zs3/z10",
        "Z11": "opensignals:blocks/zs3/z11",
        "Z12": "opensignals:blocks/zs3/z12",
        "Z13": "opensignals:blocks/zs3/z13",
        "Z14": "opensignals:blocks/zs3/z14",
        "Z15": "opensignals:blocks/zs3/z15",
        "Z16": "opensignals:blocks/zs3/z16",
        "Z17": "opensignals:blocks/zs3/z17",
        "Z18": "opensignals:blocks/zs3/z18",
        "Z19": "opensignals:blocks/zs3/z19",
        "Z20": "opensignals:blocks/zs3/z20",
        "Z21": "opensignals:blocks/zs3/z21",
        "Z22": "opensignals:blocks/zs3/z22",
        "Z23": "opensignals:blocks/zs3/z23",
        "Z24": "opensignals:blocks/zs3/z24",
        "A": "opensignals:blocks/zs3/a",
        "B": "opensignals:blocks/zs3/b",
        "C": "opensignals:blocks/zs3/c",
        "D": "opensignals:blocks/zs3/d",
        "E": "opensignals:blocks/zs3/e",
        "F": "opensignals:blocks/zs3/f",
        "G": "opensignals:blocks/zs3/g",
        "H": "opensignals:blocks/zs3/h",
        "I": "opensignals:blocks/zs3/i",
        "J": "opensignals:blocks/zs3/j",
        "K": "opensignals:blocks/zs3/k",
        "L": "opensignals:blocks/zs3/l",
        "M": "opensignals:blocks/zs3/m",
        "N" : "opensignals:blocks/zs3/n",
        "O": "opensignals:blocks/zs3/o",
        "P": "opensignals:blocks/zs3/p",
        "Q": "opensignals:blocks/zs3/q",
        "R": "opensignals:blocks/zs3/r",
        "S": "opensignals:blocks/zs3/s",
        "T": "opensignals:blocks/zs3/t",
        "U": "opensignals:blocks/zs3/u",
        "V": "opensignals:blocks/zs3/v",
        "W": "opensignals:blocks/zs3/w",
        "X": "opensignals:blocks/zs3/x",
        "Y": "opensignals:blocks/zs3/y",
        "Z": "opensignals:blocks/zs3/z"
    }
}